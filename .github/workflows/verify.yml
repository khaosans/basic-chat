name: verifyExpected

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/khaosans/basic-chat-ci:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}
    env:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Test Hugging Face API
        run: |
          python -c "from huggingface_hub import InferenceClient; import os; client = InferenceClient(token=os.environ['HF_TOKEN']); print(client.text_generation('gpt2', 'Hello world'))"
      - name: Run unit tests only
        run: |
          python -m pytest -n auto tests/ -m "unit or fast" --ignore=tests/integration -v --tb=short --cov=app --cov=reasoning_engine --cov=document_processor --cov=utils --cov=task_manager --cov=task_ui --cov=tasks --cov-report=term-missing --cov-report=html:htmlcov | tee ci_build_doc_test.log
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: htmlcov/
          retention-days: 30
      - name: Generate Final Test Report
        run: |
          python scripts/generate_final_report.py || true
      - name: Check Final Test Report Exists
        run: |
          if [ ! -f final_test_report.md ]; then
            echo "❌ final_test_report.md not found! Report generation failed."
            exit 1
          fi
      - name: Print Final Test Report (for debugging)
        run: cat final_test_report.md
      - name: Upload Final Test Report
        uses: actions/upload-artifact@v4
        with:
          name: final-test-report-unit-tests-${{ github.run_id }}
          path: final_test_report.md
          retention-days: 30

  integration-tests:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/khaosans/basic-chat-ci:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}
    env:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
    if: |
      github.ref == 'refs/heads/main' ||
      contains(github.event.head_commit.message, '[run-integration]') ||
      contains(github.event.pull_request.title, '[run-integration]')
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      - name: Test Hugging Face API
        run: |
          python -c "from huggingface_hub import InferenceClient; import os; client = InferenceClient(token=os.environ['HF_TOKEN']); print(client.text_generation('gpt2', 'Hello world'))"
      - name: Setup test environment
        run: |
          mkdir -p tests/data
          mkdir -p test_chroma_db
          python scripts/generate_assets.py || echo "Test assets generation failed, continuing..."
      - name: Run integration tests
        run: |
          python -m pytest -n auto tests/ -m "integration" -v --tb=short --timeout=300 | tee ci_build_doc_test.log
      - name: Cleanup test environment
        if: always()
        run: |
          rm -rf ./test_chroma_db
          rm -rf temp_*.mp3
          rm -rf tests/data/test_*
      - name: Generate Final Test Report
        run: |
          python scripts/generate_final_report.py || true
      - name: Check Final Test Report Exists
        run: |
          if [ ! -f final_test_report.md ]; then
            echo "❌ final_test_report.md not found! Report generation failed."
            exit 1
          fi
      - name: Print Final Test Report (for debugging)
        run: cat final_test_report.md
      - name: Upload Final Test Report
        uses: actions/upload-artifact@v4
        with:
          name: final-test-report-integration-tests-${{ github.run_id }}
          path: final_test_report.md
          retention-days: 30

  performance-regression:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/khaosans/basic-chat-ci:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}
    env:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    steps:
      - uses: actions/checkout@v4
      - name: Test Hugging Face API
        run: |
          python -c "from huggingface_hub import InferenceClient; import os; client = InferenceClient(token=os.environ['HF_TOKEN']); print(client.text_generation('gpt2', 'Hello world'))"
      - name: Run Performance Regression Test
        run: |
          python -m pytest -n auto tests/ -m "performance" -v --tb=short | tee ci_build_doc_test.log || python scripts/test_performance_regression.py
      - name: Upload Performance Metrics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-metrics
          path: performance_metrics.json
          retention-days: 30
      - name: Generate Final Test Report
        run: |
          python scripts/generate_final_report.py || true
      - name: Check Final Test Report Exists
        run: |
          if [ ! -f final_test_report.md ]; then
            echo "❌ final_test_report.md not found! Report generation failed."
            exit 1
          fi
      - name: Print Final Test Report (for debugging)
        run: cat final_test_report.md
      - name: Upload Final Test Report
        uses: actions/upload-artifact@v4
        with:
          name: final-test-report-performance-regression-${{ github.run_id }}
          path: final_test_report.md
          retention-days: 30
