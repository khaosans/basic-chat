name: verifyExpected

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio
      - name: Run tests
        run: |
          pytest tests/ -v --tb=short
      - name: Run basic functionality test
        run: |
          python -c "
          try:
              from app import OllamaChat
              print('✅ OllamaChat imported successfully')
              
              from reasoning_engine import ReasoningEngine
              print('✅ ReasoningEngine imported successfully')
              
              from document_processor import DocumentProcessor
              print('✅ DocumentProcessor imported successfully')
              
              from utils.enhanced_tools import EnhancedCalculator
              print('✅ EnhancedCalculator imported successfully')
              
              print('✅ All core modules imported successfully')
          except ImportError as e:
              print(f'❌ Import failed: {str(e)}')
              raise
          "
      - name: Test configuration
        run: |
          python -c "
          try:
              from config import config
              print(f'✅ Configuration loaded: {config.ollama_model}')
              print(f'✅ Ollama URL: {config.ollama_url}')
              print(f'✅ Caching enabled: {config.enable_caching}')
          except Exception as e:
              print(f'❌ Configuration test failed: {str(e)}')
              raise
          "

  llm-judge:
    runs-on: ubuntu-latest
    # Run in parallel, don't wait for tests
    # Only run on pushes to main or trusted PRs (same repository)
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio requests azure-ai-inference
      - name: Run GitHub Models LLM Judge Evaluator
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_MODEL: ${{ vars.GITHUB_MODEL || 'deepseek/DeepSeek-V3-0324' }}
          LLM_JUDGE_THRESHOLD: ${{ vars.LLM_JUDGE_THRESHOLD || '7.0' }}
        run: |
          set +e
          python evaluators/check_llm_judge_github.py --quick
          status=$?
          set -e
          if [ $status -ne 0 ]; then
            echo "❌ GitHub Models evaluation failed, falling back to OpenAI"
            python evaluators/check_llm_judge_openai.py --quick
          fi
      - name: Upload LLM Judge Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: llm-judge-results
          path: llm_judge_results.json
          retention-days: 30
