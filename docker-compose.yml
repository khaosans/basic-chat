version: '3.8'

services:
  # Redis for task queue and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main Streamlit application
  app:
    build: .
    ports:
      - "8501:8501"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_ENABLED=true
      - REDIS_URL=redis://redis:6379
      - ENABLE_BACKGROUND_TASKS=true
      - OLLAMA_API_URL=http://host.docker.internal:11434/api
    volumes:
      - ./chroma_db:/app/chroma_db
      - ./temp_audio:/app/temp_audio
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery worker for reasoning tasks
  worker-reasoning:
    build: .
    command: celery -A tasks worker --loglevel=info --queues=reasoning --concurrency=2
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OLLAMA_API_URL=http://host.docker.internal:11434/api
    volumes:
      - ./chroma_db:/app/chroma_db
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery worker for document processing tasks
  worker-documents:
    build: .
    command: celery -A tasks worker --loglevel=info --queues=documents --concurrency=1
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OLLAMA_API_URL=http://host.docker.internal:11434/api
    volumes:
      - ./chroma_db:/app/chroma_db
      - ./uploads:/app/uploads
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery beat for scheduled tasks
  beat:
    build: .
    command: celery -A tasks beat --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Flower for monitoring Celery tasks
  flower:
    build: .
    command: celery -A tasks flower --port=5555 --broker=redis://redis:6379/0
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8000:8000"
    volumes:
      - ./chroma_db:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
    restart: unless-stopped

volumes:
  redis_data: 