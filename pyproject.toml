[tool.poetry]
name = "basic-chat"
version = "0.1.0"
description = "AI-powered chat application with reasoning capabilities"
authors = ["Souriya Khaosanga <sour@chainable.ai>"]
readme = "README.md"
packages = [{include = "basicchat"}]

[tool.poetry.dependencies]
python = "^3.11"
streamlit = "^1.28.0"
requests = "^2.31.0"
python-dotenv = "^1.0.0"
langchain-core = ">=0.3,<0.4"
langchain-community = ">=0.3,<0.4"
langchain-chroma = ">=0.1.4,<0.2"
langchain-text-splitters = ">=0.3,<0.4"
langchain-ollama = ">=0.2,<0.3"
chromadb = ">=0.4,<0.5"
pydantic = ">=2,<3"
gTTS = "^2.3.2"
pytz = "^2023.3"
pillow = "^10.0.0"
pypdf = "^3.0.0"
unstructured = "^0.10.0"
sentence-transformers = "^2.2.0"
duckduckgo-search = "^4.1.1"
aiohttp = "^3.8.0"
asyncio-throttle = "^1.0.0"
redis = "^4.5.0"
cachetools = "^5.3.0"
structlog = "^23.1.0"
openai = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
pytest-xdist = "^3.0.0"
celery = "^5.3.0"
flower = "^2.0.0"
psutil = "^5.9.0"
pytest-timeout = "^2.1.0"
pytest-mock = "^3.10.0"
playwright = "^1.40.0"

[tool.poetry.scripts]
basicchat = "basicchat.core.app:main"

[tool.pytest.ini_options]
# Test discovery and execution
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Output and reporting
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--color=yes",
    "--cov=basicchat",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--timeout=30",
    "-m", "not slow",  # Exclude slow tests by default
    "--ignore=tests/integration",  # Exclude integration tests
    "--ignore=temp",  # Exclude temp directory
]

# Markers for different test types
markers = [
    "unit: Unit tests (fast, isolated, no external dependencies)",
    "integration: Integration tests (require external dependencies, slower)",
    "slow: Slow tests (LLM calls, heavy processing, file system operations)",
    "isolated: Tests that need isolation (file system, etc.)",
    "fast: Fast tests (mocked, no external calls)",
    "e2e: End-to-end tests (full system tests)",
    "quick: Quick tests (fast execution, minimal setup)",
    "performance: Performance tests (measure execution time and resource usage)",
]

# Test filtering
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api" 